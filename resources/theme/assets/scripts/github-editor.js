define(["jquery","theme","plugins/async","plugins/oauth-io","Github","Codepad","plugins/bootbox","storage","eventer","plugins/mscrollbar"],function(e,t,n,r,i,s,o,u,a){function l(t){return e(document.createElement(_.isUndefined(t)?"div":t))}var f=window.packadic=window.packadic||{},c=new i,h=new s(Math.random),p={},d={github:c,codepad:h,ui:p};return a("editor",d),d._defineEvent("editor.file.open"),d._defineEvent("editor.file.close"),d._defineEvent("editor.file.commit"),function(){r.initialize(f.config.oauth_io),c.authorize=function(e){e=e||!1,r.popup("github",{cache:!0}).done(function(t){e||window.location.reload()}).fail(function(e){console.log(e)})},c.clearAuthorization=function(e){e=e||!1,r.clearCache("github"),e||window.location.reload()},c.isAuthorized=function(){return _.isObject(r.create("github"))},c.request=function(){return r.create("github")},c.isAuthorized()&&(c.setAccessToken(c.request().access_token),c.setAuth("oauth")),c.getUserData=function(t){n.waterfall([function(e){data={},c.getUser().orgs(function(t,n,r){console.log("xhr",r),data.orgs=n,e(null,data)})},function(t,r){repoRequests={},e.each(t.orgs,function(e,t){repoRequests[t.login]=function(e){c.getUser().orgRepos(t.login,function(t,n){e(null,n)})}}),n.parallel(repoRequests,function(e,n){t.repos=n,r(null,t)})},function(e,t){c.getUser().repos(function(n,r){e.repos.user=r,t(null,e)})}],function(e,n){console.log("all results",n),t(e,n)})},c.getRepository=function(e,t,r){var i=c.getRepo(e,t);n.parallel({info:function(e){i.show(function(t,n){e(null,n)})},branches:function(e){i.listBranches(function(t,n){e(null,n)})}},function(e,t){r(e,t.info,t.branches,i)})},c.getDirectory=function(e,t,n,r,i){typeof r!==string&&(r="");var s=c.getRepo(e,t);s.contents(n,r,function(e,t){i(e,t,s)})},c.getFile=function(e,t,n,r,i){var s=c.getRepo(e,t);s.read(n,r,function(e,t){i(e,t,s)})},c.commitFile=function(e,t,n,r,i,s,o){var u=c.getRepo(e,t);u.write(n,r,i,s,function(e){e&&console.log("error committing file: ",e),o(e)})}}.call(),function(){h._file={},h.addToolbarButton("close","Close","btn-warning").on("click",function(e){e.preventDefault(),d._trigger("editor.file.close"),h.hide()}),h.addToolbarButton("commit","Commit/save","btn-success").on("click",function(e){e.preventDefault(),o.prompt("Enter a commit message",function(e){if(e===!1||typeof e!="string")return;d._trigger("editor.file.commit",n,e);var n=h._file;c.commitFile(n.owner,n.repoName,n.branch,n.path,h.getValue(),e,function(e){t.alert({message:"File commited successfully."})})})})}.call(),function(){function i(n,r,i){t.getTemplate("github-editor/"+n,function(t){var n=e(t(r));e("body").append(n.hide()),e.mCustomScrollbar.defaults.theme="dark",n.find(".scrollable").addClass("mCustomScrollbar").mCustomScrollbar(),i(n)})}p.getTemplate=function(e,n){t.getTemplate("github-editor/"+e,n)},p.getAuthButton=function(e){if(!_.isUndefined(this.btnAuth))return console.warn("getAuthButton $el is undefined",this.btnAuth),this.btnAuth;var t={$el:e||l("a").addClass("btn btn-sm blue-light hide").attr("id","github-auth").attr("href","#").text("Login")};return t.setLogin=function(){t.$el.off("click").text("Login").on("click",function(e){e.preventDefault(),c.authorize()})},t.setLogout=function(){t.$el.off("click").text("Logout").on("click",function(e){e.preventDefault(),c.clearAuthorization()})},c.isAuthorized()?t.setLogout():t.setLogin(),t.$el.removeClass("hide"),this.btnAuth=t},p.createFileEditor=function(e,t,r,i,s){n.parallel({codepad:function(e){h.init(function(t){h.enableToolbar(),e(null,h)})},file:function(n){c.getFile(e,t,r,i,function(e,t,r){n(null,t)})}},function(n,o){h._file={owner:e,repoName:t,branch:r,path:i},h.setValue(o.file),h.setModeForPath(i),d._trigger("editor.file.open",[e,t,r,i]),_.isFunction(s)&&s()})}}.call(),d});