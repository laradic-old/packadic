function tokenize(e){return tmReTokenizer.getLineTokens(e).tokens}function toStr(e){return e.map(function(e){return e.value}).join("")}require("amd-loader");var lib=require("./lib"),Tokenizer=require(lib.AceLib+"ace/tokenizer").Tokenizer,Tokenizer=require(lib.AceLib+"ace/tokenizer_dev").Tokenizer,TextHighlightRules=require(lib.AceLib+"ace/mode/text_highlight_rules").TextHighlightRules,r=new TextHighlightRules;r.$rules={start:[{token:"anchor",regex:/[\^\$]|\\[bBAZzG]/,merge:!1},{token:"backRef",regex:/\\([1-9]|k(<\w+\b[+-]?\d>|'\w+\b[+-]?\d'))/,merge:!1},{include:"charTypes",merge:!1},{token:"charclass",regex:/\[\^?/,push:"charclass",merge:!1},{token:"alternation",regex:/\|/,merge:!1},{include:"quantifiers",merge:!1},{include:"groups",merge:!1},{include:"xGroup",merge:!0}],charTypes:[{token:"char",regex:/\\([tvnrbfae]|[0-8]{1,3}|x[\dA-Fa-f]{2}|x7[\dA-Fa-f]{7})/,merge:!1},{token:"charType",regex:/\.|\\[wWsSdDhH]/,merge:!1},{token:"charProperty",regex:/\\p{\w+}/,merge:!1},{token:"char",regex:/\\./,merge:!1}],quantifiers:[{token:"quantifier",regex:/([?*+]|{\d+\b,?\d*}|{,\d+})[?+]?/,merge:!1}],charclass:[{include:"charTypes",merge:!1},{token:"charclass.start",regex:/\[\^?/,push:"charclass",merge:!1},{token:"charclass.end",regex:/\]/,next:"pop",merge:!1}],groups:[{token:"group",regex:/[(]([?](#|[imx\-]+:?|:|=|!|<=|<!|>|<\w+>|'\w+'|))?|[)]/,onMatch:function(e,t,n){n.groupNumber||(n.groupNumber=1);var r=e!==")",i={depth:0,type:r?"group.start":"group.end",value:e};i.groupType=e[2],e=="("?(i.number=n.groupNumber++,i.isGroup=!0):i.groupType=="'"||i.groupType=="<"&&e.slice(-1)==">"?(i.name=e.slice(2,-1),i.isGroup=!0):i.groupType==":"&&(i.isGroup=!0);if(i.groupType&&e.indexOf("x")!=-1){var s=e.indexOf("-");s==-1||s>e.indexOf("x")?n.xGroup=i:n.xGroup=null}else!r&&n.xGroup&&n.xGroup==n[0]&&n.xGroup.value.slice(-1)==":"&&(n.xGroup=null);return r?(n.groupDepth&&(n[0].hasChildren=!0),n.groupDepth=(n.groupDepth||0)+1,n.unshift(i)):(n.groupDepth--,i.start=n.shift(i),i.start.end=i),[i]},merge:!1}],xGroup:[{token:"text",regex:/\s+/,onMatch:function(e,t,n){return n.xGroup?[]:"text"},merge:!0},{token:"text",regex:/#/,onMatch:function(e,t,n){return n.xGroup?(this.next="comment",n.unshift(t),[]):(this.next="","text")},merge:!0}],comment:[{regex:"[^\n\r]*|^",token:"",onMatch:function(e,t,n){return this.next=n.shift(),[]}}]},r.normalizeRules();var tmReTokenizer=new Tokenizer(r.getRules());exports.tokenize=tokenize,exports.toStr=toStr,exports.tmReTokenizer=tmReTokenizer;