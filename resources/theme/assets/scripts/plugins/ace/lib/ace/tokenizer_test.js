typeof process!="undefined"&&require("amd-loader"),define(["require","exports","module","./tokenizer","./test/assertions"],function(e,t,n){var r=e("./tokenizer").Tokenizer,i=e("./test/assertions");n.exports={"test: createSplitterRegexp":function(){var e=new r({}),t=e.createSplitterRegexp("(a)(b)(?=[x)(])");i.equal(t.source,"(a)(b)");var t=e.createSplitterRegexp("xc(?=([x)(]))");i.equal(t.source,"xc");var t=e.createSplitterRegexp("(xc(?=([x)(])))");i.equal(t.source,"(xc)");var t=e.createSplitterRegexp("(?=r)[(?=)](?=([x)(]))");i.equal(t.source,"(?=r)[(?=)]");var t=e.createSplitterRegexp("(?=r)[(?=)](\\?=t)");i.equal(t.source,"(?=r)[(?=)](\\?=t)");var t=e.createSplitterRegexp("[(?=)](\\?=t)");i.equal(t.source,"[(?=)](\\?=t)")},"test: removeCapturingGroups":function(){var e=new r({}),t=e.removeCapturingGroups("(ax(by))[()]");i.equal(t,"(?:ax(?:by))[()]")},"test: broken highlight rules":function(){var e=new r({start:[{token:"s",regex:"&&&|^^^"},{defaultToken:"def"}],state1:[{token:"x",regex:/\b([\w]*)(\s*)((?::)?)/}]}),t=0;e.reportError=function(){t++};var n=e.getLineTokens("x|","start");i.deepEqual(n,{tokens:[{value:"x|",type:"overflow"}],state:"start"});var n=e.getLineTokens("x|","state1");i.deepEqual(n,{tokens:[{value:"x",type:"x"},{value:"|",type:"overflow"}],state:"start"}),i.equal(t,2)}}}),typeof module!="undefined"&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();