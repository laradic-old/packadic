typeof process!="undefined"&&require("amd-loader"),define(["require","exports","module","../../test/assertions","../coffee/coffee-script"],function(e,t,n){function s(e,t,n,i,s){r.equal(e.location.first_line,t),r.equal(e.location.first_column,n),r.equal(e.location.last_line,i),r.equal(e.location.last_column,s)}function o(e){try{i.parse(e).compile()}catch(t){return t}}var r=e("../../test/assertions"),i=e("../coffee/coffee-script");n.exports={"test parse valid coffee script":function(){i.parse("square = (x) -> x * x")},"test parse invalid coffee script":function(){var e=o("a = 12 f");r.equal(e.message,"Unexpected 'IDENTIFIER'"),s(e,0,4,0,5)},"test parse missing bracket":function(){var e=o("a = 12 f {\n\n");r.equal(e.message,"missing }"),s(e,0,10,0,10)},"test unexpected indent":function(){var e=o("a\n  a\n");r.equal(e.message,"Unexpected 'INDENT'"),s(e,1,0,1,1)},"test invalid destructuring":function(){var e=o("\n{b: 5} = {}");r.equal(e.message,'"5" cannot be assigned'),s(e,1,4,1,4)}}}),typeof module!="undefined"&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();