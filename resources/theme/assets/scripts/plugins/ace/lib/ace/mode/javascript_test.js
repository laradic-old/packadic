typeof process!="undefined"&&require("amd-loader"),define(["require","exports","module","../edit_session","../tokenizer","./javascript","../test/assertions"],function(e,t,n){var r=e("../edit_session").EditSession,i=e("../tokenizer").Tokenizer,s=e("./javascript").Mode,o=e("../test/assertions");n.exports={setUp:function(){this.mode=new s},"test: getTokenizer() (smoke test)":function(){var e=this.mode.getTokenizer();o.ok(e instanceof i);var t=e.getLineTokens("'juhu'","start").tokens;o.equal("string",t[0].type)},"test: toggle comment lines should prepend '//' to each line":function(){var e=new r(["  abc","cde","fg"]);e.setTabSize(1),this.mode.toggleCommentLines("start",e,0,1),o.equal(["//   abc","// cde","fg"].join("\n"),e.toString())},"test: toggle comment on commented lines should remove leading '//' chars":function(){var e=new r(["//  abc","//cde","fg"]);e.setTabSize(1),this.mode.toggleCommentLines("start",e,0,1),o.equal([" abc","cde","fg"].join("\n"),e.toString())},"test: toggle comment on all empty lines":function(){var e=new r(["  "," ","  "]);e.setTabSize(1),this.mode.toggleCommentLines("start",e,0,1),o.equal([" //  "," // ","  "].join("\n"),e.toString())},"test: toggle comment with empty lines":function(){var e=new r(["        abc","","    cde","    fg"]),t=e.toString();this.mode.toggleCommentLines("start",e,0,3),o.equal(["    //     abc","","    // cde","    // fg"].join("\n"),e.toString()),this.mode.toggleCommentLines("start",e,0,3),o.equal(t,e.toString())},"test: toggle comment lines twice should return the original text":function(){var e=new r(["  abc","cde","fg"]);this.mode.toggleCommentLines("start",e,0,2),this.mode.toggleCommentLines("start",e,0,2),o.equal(["  abc","cde","fg"].join("\n"),e.toString())},"test: toggle comment on multiple lines with one commented line prepend '//' to each line":function(){var e=new r(["  //  abc","  //cde","    fg"]);e.setTabSize(1),this.mode.toggleCommentLines("start",e,0,2),o.equal(["  // //  abc","  // //cde","  //   fg"].join("\n"),e.toString())},"test: toggle comment on a comment line with leading white space":function(){var e=new r(["//cde","  //fg"]);this.mode.toggleCommentLines("start",e,0,1),o.equal(["cde","  fg"].join("\n"),e.toString())},"test: toggle comment lines should take tabsize into account":function(){var e=new r(["  //  abc","  // cde","//    fg"]);e.setTabSize(2),this.mode.toggleCommentLines("start",e,0,2),o.equal(["    abc","  cde","    fg"].join("\n"),e.toString()),e.setTabSize(4),this.mode.toggleCommentLines("start",e,0,2),o.equal(["//     abc","//   cde","//     fg"].join("\n"),e.toString()),this.mode.toggleCommentLines("start",e,0,2),o.equal(["    abc","  cde","    fg"].join("\n"),e.toString()),e.insert({row:0,column:0}," "),this.mode.toggleCommentLines("start",e,0,2),o.equal(["//      abc","//   cde","//     fg"].join("\n"),e.toString())},"!test: togglecomment on line with one space":function(){var e=new r([" abc","  // cde","//    fg"]),t=e+"";e.setTabSize(4),this.mode.toggleCommentLines("start",e,0,0),this.mode.toggleCommentLines("start",e,0,0),o.equal(t,e.toString())},"test: auto indent after opening brace":function(){o.equal("  ",this.mode.getNextLineIndent("start","if () {","  "))},"test: auto indent after case":function(){o.equal("  ",this.mode.getNextLineIndent("start","case 'juhu':","  "))},"test: no auto indent in object literal":function(){o.equal("",this.mode.getNextLineIndent("start","{ 'juhu':","  "))},"test: no auto indent after opening brace in multi line comment":function(){o.equal("",this.mode.getNextLineIndent("start","/*if () {","  ")),o.equal("  ",this.mode.getNextLineIndent("comment","  abcd","  "))},"test: no auto indent after opening brace in single line comment":function(){o.equal("",this.mode.getNextLineIndent("start","//if () {","  ")),o.equal("  ",this.mode.getNextLineIndent("start","  //if () {","  "))},"test: no auto indent should add to existing indent":function(){o.equal("      ",this.mode.getNextLineIndent("start","    if () {","  ")),o.equal("    ",this.mode.getNextLineIndent("start","    cde","  ")),o.equal("    ",this.mode.getNextLineIndent("start","function foo(items) {","    "))},"test: special indent in doc comments":function(){o.equal(" * ",this.mode.getNextLineIndent("doc-start","/**"," ")),o.equal("   * ",this.mode.getNextLineIndent("doc-start","  /**"," ")),o.equal(" * ",this.mode.getNextLineIndent("doc-start"," *"," ")),o.equal("    * ",this.mode.getNextLineIndent("doc-start","    *"," ")),o.equal("  ",this.mode.getNextLineIndent("doc-start","  abc"," "))},"test: no indent after doc comments":function(){o.equal("",this.mode.getNextLineIndent("doc-start","   */","  "))},"test: trigger outdent if line is space and new text starts with closing brace":function(){o.ok(this.mode.checkOutdent("start","   "," }")),o.ok(!this.mode.checkOutdent("start"," a  "," }")),o.ok(!this.mode.checkOutdent("start","","}")),o.ok(!this.mode.checkOutdent("start","   ","a }")),o.ok(!this.mode.checkOutdent("start","   }","}"))},"test: auto outdent should indent the line with the same indent as the line with the matching opening brace":function(){var e=new r(["  function foo() {","    bla","    }"],new s);this.mode.autoOutdent("start",e,2),o.equal("  }",e.getLine(2))},"test: no auto outdent if no matching brace is found":function(){var e=new r(["  function foo()","    bla","    }"]);this.mode.autoOutdent("start",e,2),o.equal("    }",e.getLine(2))}}}),typeof module!="undefined"&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();