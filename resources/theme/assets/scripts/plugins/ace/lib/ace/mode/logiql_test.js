typeof process!="undefined"&&require("amd-loader"),define(["require","exports","module","../edit_session","./logiql","../test/assertions"],function(e,t,n){var r=e("../edit_session").EditSession,i=e("./logiql").Mode,s=e("../test/assertions");n.exports={setUp:function(){this.mode=new i},"test: toggle comment lines should prepend '//' to each line":function(){var e=new r(["    abc","cde","fg"]);this.mode.toggleCommentLines("start",e,0,1),s.equal(["//     abc","// cde","fg"].join("\n"),e.toString())},"test: auto indent after ->":function(){s.equal("  ",this.mode.getNextLineIndent("start","parent(a, b) ->","  "))},"test: auto indent after <--":function(){s.equal("  ",this.mode.getNextLineIndent("start","foo <--    ","  "))},"test: no auto indent in multi line comment":function(){s.equal("",this.mode.getNextLineIndent("start","/* -->","  ")),s.equal("  ",this.mode.getNextLineIndent("start","  /* ->","    ")),s.equal("  ",this.mode.getNextLineIndent("comment.block","  abcd","  "))},"test: no auto indent after -> in single line comment":function(){s.equal("",this.mode.getNextLineIndent("start","//->","  ")),s.equal("  ",this.mode.getNextLineIndent("start","  //->","  "))},"test: trigger outdent if line ends with .":function(){s.ok(this.mode.checkOutdent("start","   ","\n")),s.ok(this.mode.checkOutdent("start"," a  ","\r\n")),s.ok(!this.mode.checkOutdent("start","","}")),s.ok(!this.mode.checkOutdent("start","   ","a }")),s.ok(!this.mode.checkOutdent("start","   }","}"))},"test: auto outdent should indent the line with the same indent as the line with the matching ->":function(){var e=new r(["  bar (a, b) ->","  foo(a)[1.2]","    bla.","    "],new i);this.mode.autoOutdent("start",e,2),s.equal("  ",e.getLine(3))},"test: no auto outdent if no matching brace is found":function(){var e=new r(["  bar (a, b) ->","  foo(a)[1.2].","    bla.","    "],new i);this.mode.autoOutdent("start",e,2),s.equal("    ",e.getLine(3))}}}),typeof module!="undefined"&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();