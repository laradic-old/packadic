typeof process!="undefined"&&require("amd-loader"),define(["require","exports","module","../python","../../edit_session","../../test/assertions"],function(e,t,n){var r=e("../python").Mode,i=e("../../edit_session").EditSession,s=e("../../test/assertions");n.exports={"test: bracket folding":function(){var e=new i(["[ ","stuff","]","[ ","{ ","[  #-"]),t=new r;e.setFoldStyle("markbeginend"),e.setMode(t),s.equal(e.getFoldWidget(0),"start"),s.equal(e.getFoldWidget(1),""),s.equal(e.getFoldWidget(2),""),s.equal(e.getFoldWidget(3),"start"),s.equal(e.getFoldWidget(4),"start"),s.equal(e.getFoldWidget(5),""),s.range(e.getFoldWidgetRange(0),0,1,2,0),s.equal(e.getFoldWidgetRange(3),null),s.equal(e.getFoldWidgetRange(5),null)},"test: indentation folding":function(){var e=new i(["def a: #",""," b:","  c"," ","  c",""," ",""]),t=new r;e.setFoldStyle("markbeginend"),e.setMode(t),s.equal(e.getFoldWidget(0),"start"),s.equal(e.getFoldWidget(1),""),s.equal(e.getFoldWidget(2),"start"),s.range(e.getFoldWidgetRange(0),0,6,5,3),s.range(e.getFoldWidgetRange(2),2,3,5,3)}}}),typeof module!="undefined"&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();