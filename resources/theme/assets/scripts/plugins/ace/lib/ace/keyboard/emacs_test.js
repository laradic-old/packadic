typeof process!="undefined"&&require("amd-loader"),define(["require","exports","module","../multi_select","./../edit_session","./../editor","./../range","./../test/mockrenderer","./emacs","./../test/assertions"],function(e,t,n){function c(e){var t=new r(e.split("\n"));f=new i(new o,t),f.setKeyboardHandler(u.handler),l=f.selection}function h(e){return JSON.stringify(e,null,2)}function p(e,t){return e.map(function(e){return e[t]})}e("../multi_select");var r=e("./../edit_session").EditSession,i=e("./../editor").Editor,s=e("./../range").Range,o=e("./../test/mockrenderer").MockRenderer,u=e("./emacs"),a=e("./../test/assertions"),f,l;n.exports={"test: detach removes emacs commands from command manager":function(){c(""),a.ok(!!f.commands.byName.keyboardQuit,"setup error: emacs commands not installed"),f.keyBinding.removeKeyboardHandler(f.getKeyboardHandler()),a.ok(!f.commands.byName.keyboardQuit,"emacs commands not removed")},"test: keyboardQuit clears selection":function(){c("foo"),f.selectAll(),f.execCommand("keyboardQuit"),a.ok(f.selection.isEmpty(),"selection non-empty")},"test: exchangePointAndMark without mark set":function(){c("foo"),l.setRange(s.fromPoints({row:0,column:1},{row:0,column:3})),f.execCommand("exchangePointAndMark"),a.deepEqual({row:0,column:1},f.getCursorPosition(),h(f.getCursorPosition()))},"test: exchangePointAndMark with mark set":function(){c("foo"),f.pushEmacsMark({row:0,column:1}),f.pushEmacsMark({row:0,column:2}),f.execCommand("exchangePointAndMark",{count:4}),a.deepEqual({row:0,column:2},f.getCursorPosition(),h(f.getCursorPosition())),a.deepEqual([{row:0,column:1},{row:0,column:0}],f.session.$emacsMarkRing,h(f.session.$emacsMarkRing))},"test: exchangePointAndMark with selection":function(){c("foo"),f.pushEmacsMark({row:0,column:1}),f.pushEmacsMark({row:0,column:2}),l.setRange(s.fromPoints({row:0,column:0},{row:0,column:1}),!0),f.execCommand("exchangePointAndMark"),a.deepEqual({row:0,column:1},f.getCursorPosition(),h(f.getCursorPosition())),a.deepEqual([{row:0,column:1},{row:0,column:2}],f.session.$emacsMarkRing,h(f.session.$emacsMarkRing))},"test: exchangePointAndMark with multi selection":function(){c("foo\nhello world\n123");var e=[[{row:0,column:0},{row:0,column:3}],[{row:1,column:0},{row:1,column:5}],[{row:1,column:6},{row:1,column:11}]];e.forEach(function(e){l.addRange(s.fromPoints(e[0],e[1]))}),a.equal("foo\nhello\nworld",f.getSelectedText()),f.execCommand("exchangePointAndMark"),a.equal("foo\nhello\nworld",f.getSelectedText()),a.deepEqual(p(e,0),p(l.getAllRanges(),"cursor"),"selections dir not inverted")},"test: exchangePointAndMark with multi cursors":function(){c("foo\nhello world\n123");var e=[[{row:0,column:0},{row:0,column:3}],[{row:1,column:0},{row:1,column:5}],[{row:1,column:6},{row:1,column:11}]];e.forEach(function(e){f.pushEmacsMark(e[1]),l.addRange(s.fromPoints(e[0],e[0]))}),a.deepEqual(p(e,0),p(l.getAllRanges(),"cursor"),h(l.getAllRanges())),f.execCommand("exchangePointAndMark"),a.deepEqual(p(e,1),p(l.getAllRanges(),"cursor"),"not inverted: "+h(l.getAllRanges()))},"test: setMark with multi cursors":function(){c("foo\nhello world\n123");var e=[{row:0,column:0},{row:1,column:0},{row:1,column:6}];e.forEach(function(e){l.addRange(s.fromPoints(e,e))}),f.execCommand("setMark"),a.deepEqual(e,f.session.$emacsMarkRing,h(f.session.$emacsMarkRing))}}}),typeof module!="undefined"&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();