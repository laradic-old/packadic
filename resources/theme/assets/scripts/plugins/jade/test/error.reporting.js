function getError(e,t){try{jade.render(e,t)}catch(n){return n}throw new Error("Input was supposed to result in an error.")}function getFileError(e,t){try{jade.renderFile(e,t)}catch(n){return n}throw new Error("Input was supposed to result in an error.")}var jade=require("../"),assert=require("assert"),fs=require("fs");describe("error reporting",function(){describe("compile time errors",function(){describe("with no filename",function(){it("includes detail of where the error was thrown",function(){var e=getError("foo(");assert(/Jade:1/.test(e.message)),assert(/foo\(/.test(e.message))})}),describe("with a filename",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getError("foo(",{filename:"test.jade"});assert(/test\.jade:1/.test(e.message)),assert(/foo\(/.test(e.message))})}),describe("with a layout without block declaration (syntax)",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getFileError(__dirname+"/fixtures/compile.with.layout.syntax.error.jade",{});assert(/[\\\/]layout.syntax.error.jade:2/.test(e.message)),assert(/foo\(/.test(e.message))})}),describe("with a layout without block declaration (locals)",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getFileError(__dirname+"/fixtures/compile.with.layout.locals.error.jade",{});assert(/[\\\/]layout.locals.error.jade:2/.test(e.message)),assert(/undefined is not a function/.test(e.message))})}),describe("with a include (syntax)",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getFileError(__dirname+"/fixtures/compile.with.include.syntax.error.jade",{});assert(/[\\\/]include.syntax.error.jade:2/.test(e.message)),assert(/foo\(/.test(e.message))})}),describe("with a include (locals)",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getFileError(__dirname+"/fixtures/compile.with.include.locals.error.jade",{});assert(/[\\\/]include.locals.error.jade:2/.test(e.message)),assert(/foo\(/.test(e.message))})}),describe("with a layout (without block) with an include (syntax)",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getFileError(__dirname+"/fixtures/compile.with.layout.with.include.syntax.error.jade",{});assert(/[\\\/]include.syntax.error.jade:2/.test(e.message)),assert(/foo\(/.test(e.message))})}),describe("with a layout (without block) with an include (locals)",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getFileError(__dirname+"/fixtures/compile.with.layout.with.include.locals.error.jade",{});assert(/[\\\/]include.locals.error.jade:2/.test(e.message)),assert(/foo\(/.test(e.message))})}),describe("Unexpected character",function(){it("includes details of where the error was thrown",function(){var e=getError("ul?",{});assert(e.message.indexOf("unexpected text ?")!==-1)})}),describe("Include filtered",function(){it("includes details of where the error was thrown",function(){var e=getError("include:js()!",{});assert(e.message.indexOf('expected space after include:filter but got "!"')!==-1);var e=getError("include:js ",{});assert(e.message.indexOf("missing path for include:filter")!==-1)})}),describe("mixin block followed by a lot of blank lines",function(){it("reports the correct line number",function(){var e=getError("mixin test\n    block\n\ndiv()Test"),t=/Jade\:(\d+)/.exec(e.message);assert(t,"Line number must be included in error message"),assert(t[1]==="4","The error should be reported on line 4, not line "+t[1])})})}),describe("runtime errors",function(){describe("with no filename and `compileDebug` left undefined",function(){it("just reports the line number",function(){var e=new Error("sentinel"),t=getError("-foo()",{foo:function(){throw e}});assert(/on line 1/.test(t.message))})}),describe("with no filename and `compileDebug` set to `true`",function(){it("includes detail of where the error was thrown",function(){var e=new Error("sentinel"),t=getError("-foo()",{foo:function(){throw e},compileDebug:!0});assert(/Jade:1/.test(t.message)),assert(/-foo\(\)/.test(t.message))})}),describe("with a filename that does not correspond to a real file and `compileDebug` left undefined",function(){it("just reports the line number",function(){var e=new Error("sentinel"),t=getError("-foo()",{foo:function(){throw e},filename:"fake.jade"});assert(/on line 1/.test(t.message))})}),describe("with a filename that corresponds to a real file and `compileDebug` left undefined",function(){it("includes detail of where the error was thrown including the filename",function(){var e=new Error("sentinel"),t=__dirname+"/fixtures/runtime.error.jade",n=getError(fs.readFileSync(t,"utf8"),{foo:function(){throw e},filename:t});assert(/fixtures[\\\/]runtime\.error\.jade:1/.test(n.message)),assert(/-foo\(\)/.test(n.message))})}),describe("in a mixin",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getFileError(__dirname+"/fixtures/runtime.with.mixin.error.jade",{});assert(/mixin.error.jade:2/.test(e.message)),assert(/Cannot read property 'length' of null/.test(e.message))})}),describe("in a layout",function(){it("includes detail of where the error was thrown including the filename",function(){var e=getFileError(__dirname+"/fixtures/runtime.layout.error.jade",{});assert(/layout.with.runtime.error.jade:3/.test(e.message)),assert(/Cannot read property 'length' of undefined/.test(e.message))})})}),describe("deprecated features",function(){it("deprecates `!!!` in favour of `doctype`",function(){var e=getError("!!! 5",{filename:"test.jade"});assert(/test\.jade:1/.test(e.message)),assert(/`!!!` is deprecated, you must now use `doctype`/.test(e.message))}),it("deprecates `doctype 5` in favour of `doctype html`",function(){var e=getError("doctype 5",{filename:"test.jade"});assert(/test\.jade:1/.test(e.message)),assert(/`doctype 5` is deprecated, you must now use `doctype html`/.test(e.message))}),it("warns about element-with-multiple-attributes",function(){var e=console.warn,t="";console.warn=function(e){t+=e};var n=jade.renderFile(__dirname+"/fixtures/element-with-multiple-attributes.jade");console.warn=e,assert(/element-with-multiple-attributes.jade, line 1:/.test(t)),assert(/You should not have jade tags with multiple attributes/.test(t)),assert(n==='<div attr="val" foo="bar"></div>')}),it("warns about missing space at the start of a line",function(){var e=console.warn,t="";console.warn=function(e){t+=e};var n=jade.render("%This line is plain text, but it should not be",{filename:"foo.jade"});console.warn=e,assert(t==='Warning: missing space before text for line 1 of jade file "foo.jade"'),assert(n==="%This line is plain text, but it should not be")})}),describe("if you throw something that isn't an error",function(){it("just rethrows without modification",function(){var e=getError('- throw "foo"');assert(e==="foo")})}),describe("import without a filename for a basedir",function(){it("throws an error",function(){var e=getError("include foo.jade");assert(/the "filename" option is required to use/.test(e.message));var e=getError("include /foo.jade");assert(/the "basedir" option is required to use/.test(e.message))})})});