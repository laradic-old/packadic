function parse(e,t){t.lexer&&console.warn("Using `lexer` as a local in render() is deprecated and will be interpreted as an option in Jade 2.0.0");var n=new(t.parser||Parser)(e,t.filename,t),r;try{r=n.parse()}catch(i){n=n.context(),runtime.rethrow(i,n.filename,n.lexer.lineno,n.input)}var s=new(t.compiler||Compiler)(r,t),o;try{o=s.compile()}catch(i){if(!i.line||!i.filename&&!!t.filename)throw i instanceof Error&&(i.message+="\n\nPlease report this entire error and stack trace to https://github.com/jadejs/jade/issues"),i;runtime.rethrow(i,i.filename,i.line,n.input)}t.debug&&console.error("\nCompiled Function:\n\n[90m%s[0m",o.replace(/^/gm,"  "));var u=[];t.globals&&(u=t.globals.slice()),u.push("jade"),u.push("jade_mixins"),u.push("jade_interp"),u.push("jade_debug"),u.push("buf");var a="var buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n"+(t.self?"var self = locals || {};\n"+o:addWith("locals || {}","\n"+o,u))+";"+'return buf.join("");';return{body:a,dependencies:n.dependencies}}function handleTemplateCache(e,t){var n=e.filename;if(e.cache&&exports.cache[n])return exports.cache[n];t===undefined&&(t=fs.readFileSync(e.filename,"utf8"));var r=exports.compile(t,e);return e.cache&&(exports.cache[n]=r),r}var Parser=require("./parser"),Lexer=require("./lexer"),Compiler=require("./compiler"),runtime=require("./runtime"),addWith=require("with"),fs=require("fs"),utils=require("./utils");exports.selfClosing=Object.keys(require("void-elements")),exports.doctypes=require("./doctypes"),exports.filters=require("./filters"),exports.utils=utils,exports.Compiler=Compiler,exports.Parser=Parser,exports.Lexer=Lexer,exports.nodes=require("./nodes"),exports.runtime=runtime,exports.cache={},exports.compile=function(e,t){var t=t||{},n=t.filename?utils.stringify(t.filename):"undefined",r;e=String(e);var i=parse(e,t);t.compileDebug!==!1?r=["var jade_debug = [{ lineno: 1, filename: "+n+" }];","try {",i.body,"} catch (err) {","  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno"+(t.compileDebug===!0?","+utils.stringify(e):"")+");","}"].join("\n"):r=i.body,r=new Function("locals, jade",r);var s=function(e){return r(e,Object.create(runtime))};return t.client&&(s.toString=function(){var n=new Error("The `client` option is deprecated, use the `jade.compileClient` method instead");return n.name="Warning",console.error(n.stack||n.message),exports.compileClient(e,t)}),s.dependencies=i.dependencies,s},exports.compileClientWithDependenciesTracked=function(e,t){var t=t||{},n=t.name||"template",r=t.filename?utils.stringify(t.filename):"undefined",i;e=String(e),t.compileDebug=t.compileDebug?!0:!1;var s=parse(e,t);return t.compileDebug?i=["var jade_debug = [{ lineno: 1, filename: "+r+" }];","try {",s.body,"} catch (err) {","  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "+utils.stringify(e)+");","}"].join("\n"):i=s.body,{body:"function "+n+"(locals) {\n"+i+"\n}",dependencies:s.dependencies}},exports.compileClient=function(e,t){return exports.compileClientWithDependenciesTracked(e,t).body},exports.compileFile=function(e,t){return t=t||{},t.filename=e,handleTemplateCache(t)},exports.render=function(e,t,n){"function"==typeof t&&(n=t,t=undefined);if(typeof n=="function"){var r;try{r=exports.render(e,t)}catch(i){return n(i)}return n(null,r)}t=t||{};if(t.cache&&!t.filename)throw new Error('the "filename" option is required for caching');return handleTemplateCache(t,e)(t)},exports.renderFile=function(e,t,n){"function"==typeof t&&(n=t,t=undefined);if(typeof n=="function"){var r;try{r=exports.renderFile(e,t)}catch(i){return n(i)}return n(null,r)}return t=t||{},t.filename=e,handleTemplateCache(t)(t)},exports.compileFileClient=function(e,t){var n=e+":client";t=t||{},t.filename=e;if(t.cache&&exports.cache[n])return exports.cache[n];var r=fs.readFileSync(t.filename,"utf8"),i=exports.compileClient(r,t);return t.cache&&(exports.cache[n]=i),i},exports.__express=exports.renderFile;