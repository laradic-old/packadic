module.exports=function(e){function t(e){return"/*!\n* "+e+"\n"+"* http://github.com/RobinHerbots/jquery.inputmask\n"+'* Copyright (c) 2010 - <%= grunt.template.today("yyyy") %> <%= pkg.author.name %>\n'+"* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n"+"* Version: <%= pkg.version %>\n"+"*/\n"}function n(n){var i={},s=e.file.expand(n+"/*.js");for(var o in s){var u=s[o].replace("js/",""),a=u.replace(".js",".min.js");r(s[o],"build/"+u,u.indexOf("extension")==-1?["jquery"]:["jquery","./jquery.inputmask"]),i[u]={dest:"dist/inputmask/"+u,src:"build/"+u,options:{banner:t(u),beautify:!0,mangle:!1,preserveComments:"some",ASCIIOnly:!0}},i[a]={dest:"dist/inputmask/"+a,src:"build/"+u,options:{banner:t(a),preserveComments:"some",ASCIIOnly:!0}}}return s=e.file.expand(n+"/*.extensions.js"),s.splice(0,0,"js/jquery.inputmask.js"),i.inputmaskbundle={files:{"dist/<%= pkg.name %>.bundle.js":s},options:{banner:t("<%= pkg.name %>.bundle"),beautify:!0,mangle:!1,preserveComments:"some",ASCIIOnly:!0}},i.inputmaskbundlemin={files:{"dist/<%= pkg.name %>.bundle.min.js":s},options:{banner:t("<%= pkg.name %>.bundle"),preserveComments:"some",ASCIIOnly:!0}},i}function r(t,n,r){function i(){return s.replace(new RegExp("\\(jQuery\\).*$"),"")}var s=e.file.read(t),o="(function (factory) {if (typeof define === 'function' && define.amd) {define("+JSON.stringify(r)+", factory);"+"} else {"+"factory(jQuery);"+"}}\n"+i()+");";e.file.write(n,o)}e.initConfig({pkg:e.file.readJSON("package.json"),uglify:n("js"),clean:["dist"],qunit:{files:["qunit/qunit.html"]},bump:{options:{files:["package.json","bower.json","composer.json"],updateConfigs:["pkg"],commit:!1,createTag:!1,push:!1}},release:{options:{bump:!1,commitMessage:"jquery.inputmask <%= version %>"}},nugetpack:{dist:{src:function(){return process.platform==="linux"?"nuget/jquery.inputmask.linux.nuspec":"nuget/jquery.inputmask.nuspec"}(),dest:"dist/",options:{version:"<%= pkg.version %>"}}},nugetpush:{dist:{src:"dist/jQuery.InputMask.<%= pkg.version %>.nupkg"}},shell:{options:{stderr:!1},gitcommitchanges:{command:["git add .","git reset -- package.json",'git commit -m "jquery.inputmask <%= pkg.version %>"'].join("&&")}}}),e.loadNpmTasks("grunt-contrib-uglify"),e.loadNpmTasks("grunt-contrib-clean"),e.loadNpmTasks("grunt-contrib-qunit"),e.loadNpmTasks("grunt-bump"),e.loadNpmTasks("grunt-release"),e.loadNpmTasks("grunt-nuget"),e.loadNpmTasks("grunt-shell"),e.registerTask("publish:patch",["clean","bump:patch","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]),e.registerTask("publish:minor",["clean","bump:minor","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]),e.registerTask("publish:major",["clean","bump:major","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]),e.registerTask("default",["clean","uglify"])};